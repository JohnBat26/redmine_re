<% content_for :header_tags do %>
  <%= javascript_include_tag 'jquery-1.7.2.js', :plugin => 'redmine_re' %>
  <%= javascript_include_tag 'jquery-ui-1.8.21.js', :plugin => 'redmine_re' %>
  <%= javascript_include_tag 'jquery.layout-rc30.51.js', :plugin => 'redmine_re' %>
  <%= javascript_include_tag 'redmine_re.js', :plugin => 'redmine_re' %>
  <%= stylesheet_link_tag 'redmine_re.css', :plugin => "redmine_re", :media => 'all' %>
  <%= stylesheet_link_tag 'ajaxful_rating.css', :plugin => "redmine_re", :media => 'all' %>
<% end %>

<div id="infobar" class="ui-layout-west ui-layout-content">
  <%= render "requirements/treebar" %>
</div>

<div id='detail_view' class='ui-layout-center'>
  <%= render 're_artifact_properties/action_menu', {:artifact => @artifact} %>

    <h2><%= t(:re_edit) + ' ' + t(:re_artifact) + ' #' + @re_artifact_properties.id.to_s + ' - ' + @re_artifact_properties.name + ' (' + rendered_artifact_type(@artifact_type) + ')' unless @re_artifact_properties.nil? %></h2>

  <%= errors_and_flash params[:controller] %>

  <div class="panes">
    <div class="box">
      <%= form_for @re_artifact_properties do |f| %>
      <%= hidden_field_tag(:id, @re_artifact_properties.id) %>
      <fieldset>
        <legend><%= t(:re_common_attributes) %></legend>

        <div class="splitcontentleft" style="border-right: 1px dotted #cccccc;">
          <p>
          <%= f.label :name, t(:re_artifact_name) %> <%= f.text_field :name, :required => true %>
          </p>
          <%= javascript_tag "Form.Element.focus('artifact_name');" %>

          <p>
            <label><%= t(:re_wiki_page_for_artifact) %></label> <%= wiki_page_of_re_artifact(@project, @re_artifact_properties).html_safe %>
          </p>
          <%
             re_users = []
             re_users << User.current
             re_users.concat User.all.sort_by { |u| u.lastname }
             re_users.delete_if { |u| !u.allowed_to? :edit_requirements, @project }
             re_users.uniq!
          %>
          <p>
          <%= f.label :responsibles, t(:re_artifact_responsible) %> <%= f.select :responsibles, re_users.collect { |u| [u.firstname+" "+ u.lastname] } %>
          </p>
            <p>
            <%= f.label :created_by, t(:re_created_by) %> <%= @re_artifact_properties.author.name %> <%= t(:re_at) %> <%= @re_artifact_properties.created_at.strftime('%c') %><br/>
            <%= f.label :last_changed_by, t(:re_changed_by) %> <%= @re_artifact_properties.user.name %> <%= t(:re_at) %> <%= @re_artifact_properties.updated_at.strftime('%c') %>
            </p>
        </div>

        <div class="splitcontentright">
          <b><%= t(:re_description_fieldset) %></b>
              <div class="contextual">
                <a href="#" accesskey="<%= accesskey(:edit) -%>" class="icon icon-edit" onclick="showAndScrollTo('update-description', 'artifact_description'); return false;"><%= l(:re_update_description) %></a>
              </div>
              <%= textilizable(@re_artifact_properties, :description, :only_path => false) %>
              <br/>
          <div id='update-description' <%= 'style="display:none;"' %>>
            <%= f.text_area :description,
                            :cols => 60,
                            :rows => (@re_artifact_properties.description.blank? ? 10 : [[10, @re_artifact_properties.description.length / 50].max, 100].min),
                            :accesskey => accesskey(:edit),
                            :class => 'wiki-edit' %>
          <%= wikitoolbar_for 'artifact_description' %>
          </div>
        </div>
      </fieldset>

      <br/>

      <fieldset>
        <legend><%= t(:re_associated_issues) %></legend>


        <div class="splitcontentleft" style="border-right: 1px dotted #cccccc;">
          <p>
            <label><%= t(:add_issue_to_requirement) %></label>
            <%= text_field_tag :issue, '', {:size => 20, :class => 'autocomplete', :id => 'issue_autocomplete'} %>
          </p>
            <%= link_to image_tag('add.png')+' create related Issue', :controller=> 'issues', :action=>'new', :project_id => @project.identifier,
              :artifacttype => @re_artifact_properties.artifact_type, :artifactname => @re_artifact_properties.name, :displayid => @re_artifact_properties.id, :associationid => @re_artifact_properties.artifact_id unless @re_artifact_properties.id.blank?%>


          <div id="issue_candidates" class="autocomplete"></div>
          <%= javascript_tag do %>
              new Ajax.Autocompleter('issue_autocomplete',
              'issue_candidates',
              '<%= url_for :project_id => @project.identifier, :controller => 're_artifact_properties', :action => 'autocomplete_issue' %>',
              {
              paramName: 'issue_subject',
              parameters:
              'project_id=<%= @project.id %><%= '&id=' + @re_artifact_properties_id.to_s unless @re_artifact_properties_id.blank? %>',
              minChars: 1,
              frequency: 0.5,
              afterUpdateElement : getIssueId});

              function getIssueId(text, li){

                  jQuery('#added_issues').append(li.innerHTML + ', ');
                  jQuery('#added_issues').append('<input id="issue_id" type="hidden" name="issue_id[]" value=' + li.id + ' >');
                  document.getElementById('issue_autocomplete').value ="";
              }

            <% end %>

      </div>

      <div class='splitcontentright'>
          <% unless @issues.nil? %>

              <%= @issues.collect { |issue|
                  (link_to issue.subject, issue_path(issue))+'&nbsp'.to_s+
                  (link_to image_tag('delete.png'), :controller => 're_artifact_properties', :action => 'remove_issue_from_artifact', :issueid => issue.id, :project_id=>@project.id, :id => @re_artifact_properties.id) }.to_sentence %>
          <% end %>
        <div id='added_issues'></div>
      </div>


      </fieldset>


    <!-- Additional fields like subtasks for task which are described in an own partial -->
    <%= render( "#{@artifact_type}/formfields", {:f => f} ) if File.exists?("#{Rails.root}/vendor/plugins/redmine_re/app/views/#{@artifact_type}/_formfields.rhtml") %>

    <!-- add building blocks if user obtains the rights needed for that -->
    <div id='re_bb_section'>
      <%= render :partial => "re_building_block/bb_section", :locals => {:bb_hash => @bb_hash, :bb_error_hash => @bb_error_hash} %>
    </div>
      <%# add_bb_configuration_link(params[:controller].camelcase)%>


        <div class="rating_comments">
            <div class="rating_comments_left">
                <fieldset class="rating">
                    <legend><%= t(:rating) %></legend>

                    <div id="rating">
                        <%= render :partial => '/re_artifact_properties/rating', :locals => {:artifact => @re_artifact_properties} %>
                    </div>
                </fieldset>
            </div>
            <div class="rating_comments_right">
                <fieldset class="comment">
                    <legend> <%= t(:comments) %></legend>

                    <textarea class="comment_input" name="comment" cols="20" rows="3"></textarea>

                    <%
                    if ( User.current.preference[:others].nil? or User.current.preference[:others][:comments_sorting]  == "asc" )
                      @re_artifact_properties.comments.each do |comment|
                    %>
                       <hr />
                       <p>
                          <% if User.current.allowed_to?(:administrate_requirements, @project) %>
                            [<%= link_to 'X', :controller => @artifact_type, :action => 'edit', :deletecomment_id => comment.id, :id => @artifact.id %>]
                          <% end %>

                          <b><%= comment.created_on.to_datetime.to_s[0,10] %>
                          <%= comment.created_on.to_datetime.to_s[-14,8] %> -
                          <%= User.find(comment.author_id).to_s %></b><br />
                          <%= comment.comments %></p>
                    <% end %>
                    <%
                    elsif
                      @re_artifact_properties.comments.reverse.each do |comment|
                    %>
                       <hr />
                       <p>
                          <% if User.current.allowed_to?(:administrate_requirements, @project) %>
                            [<%= link_to 'X', :controller => @artifact_type, :action => 'edit', :deletecomment_id => comment.id, :id => @artifact.id %>]
                          <% end %>

                          <b><%= comment.created_on.to_datetime.to_s[0,10] %>
                          <%= comment.created_on.to_datetime.to_s[-14,8] %> -
                          <%= User.find(comment.author_id).to_s %></b><br />
                          <%= comment.comments %></p>
                    <% end %>
                    <% end %>
                </fieldset>
            </div>
            <div class="rating_comments_clear"></div>
       </div>

    <p>
    <%= submit_tag t(:re_save) %>
        &nbsp;
    <%= link_to(t(:re_cancel), { :project_id => @project.id }, { :class => "icon icon-reload" }) %>
    </p>

  <% end %><!-- form end tag -->

    <div id="watchers">
      <%= render :partial => 'watchers/watchers', :locals => {:watched => @re_artifact_properties} %>
    </div>

    </div> <!--end of tab one -->

    <% if params.has_key? :id %>
      <div class="box">
      <%= render "re_artifact_properties/manage_relationships", :id => params[:id], :project_id => @project.id %>
    </div><!-- end of tab two -->
  <% end %>
  </div>
</div><!-- panes-->
<%= javascript_tag do %>
  jQuery(function() {
    // setup ul.tabs to work as tabs for each div directly under div.panes
    jQuery("ul.tabs").tabs("div.panes > div");
    });
<% end %>

