<%= f.fields_for :artifact do |artifact_form| %>
	<fieldset class="tabular"><legend><%= l(:re_use_case_specific_attributes) %></legend>
	    <p>
	    <%= artifact_form.label :goal_level, l(:re_use_case_level) %>
	    <%#  image_tag('icons/use_case_cloud.png', :size => '40x40', :plugin => 'redmine_re', :alt => t(:re_use_case_abstract_overview)) => 5 %>
	    <%= artifact_form.select :goal_level, [
	      [t(:re_use_case_abstract_overview), 5],
	      [t(:re_use_case_overview) , 4 ],
	      [t(:re_use_case_user_goal) , 3 ],
	      [t(:re_use_case_function) , 2 ],
	      [t(:re_use_case_low) , 1 ] ] %>
	    </p>
	    <p>
	      <%= artifact_form.label :trigger, l(:re_use_case_trigger) %> <%= artifact_form.text_field :trigger, :size => 80 %>
	    </p>
	    <p>
	      <%= artifact_form.label :precondition, l(:re_use_case_precondition) %> <%= artifact_form.text_field :precondition, :size => 80 %>
	    </p>
	    <p>
	      <%= artifact_form.label :postcondition, l(:re_use_case_postcondition) %> <%= artifact_form.text_field :postcondition, :size => 80 %>
	    </p>
	    
		<%unless @user_profiles.nil?  
			user_profiles_array = [] << [l(:re_please_choose), -1]
			user_profiles_array_2 = ['']
			@user_profiles.each do |user_profile| 
								
				user_profiles_array << [user_profile.name, user_profile.id]
				user_profiles_array_2 << [user_profile.name, user_profile.id]
			end
			%>
			<p><%= artifact_form.label :precondition, l(:re_primary_actor) %> 
				<% unless @current_primary_user.blank? %>
					<%= select_tag("primary_user_profile", options_for_select(user_profiles_array, :selected => @current_primary_user.sink_id) ) %>
				<%else%>
					<%= select_tag("primary_user_profile", options_for_select(user_profiles_array) ) %>
				<% end%>
			</p>
		<%end%>
		
	      <p>
	      	<label><%= t(:re_secondary_actor) %></label>
			
	        <div id="secondary_actor_filter" style="padding-left: 180px;">
	          <div class="inputs">
	            <%=
	                select_tag 'secondary_actor_ids[]', options_for_select(@secondary_user_profiles.collect { |u| [u[:properties].name, u[:properties].id] }, @secondary_user_profiles.collect { |u| u[:properties].id }), :id => 'secondary_actor_filter_input', :class => 'input_container suggestible', :multiple => true
	            %>
	          </div>
	        </div>
	        
	      </p>
	      <%= javascript_tag do %>

              (function($) {

              $().ready(function() {
              $('#secondary_actor_filter_input option').attr("selected","selected");

              // hidden on init because of UJS
              $('#secondary_actor_filter_input_nojs').remove();
              $('#secondary_actor_filter .inputs').show();

              $('#secondary_actor_filter_input').suggestible(suggestibleOptions({
              suggestionsUrl: '<%= suggest_artifacts_re_queries_path(@project.id) %>',
              suggestionsLayout: function(helpers) {
              return new ArtifactsSuggestBoxItems(helpers);
              },
              bitsUrl: '<%= artifacts_bits_re_queries_path(@project.id) %>',
              only_types : 'ReUserProfile',
              except_ids: null
              }));

              });
              })(jQuery);
          <% end %>


		
	</fieldset>
	
	<fieldset><legend><%= l(:re_use_case_steps) %></legend>
	  <table class="steps">
	    <thead>
	      <tr>
	        <th>&nbsp;</th>
	        <th><%= t(:re_user_steps) %></th>
	        <th width="120px" >&nbsp;</th>
	        <th ><%= t(:re_system_steps) %></th>
	        <th>&nbsp;</th>
	        <th style="min-width: 300px;"><%= t(:re_uc_add_below) %> <%= link_to_function( image_tag('icons/user_add.png', :plugin => 'redmine_re', :alt => t(:re_uc_user)), "addStep('steps', 'top', 'user')", :class => "" ) %>&nbsp;&nbsp;
	          <%= link_to_function( image_tag('icons/monitor_add.png', :plugin => 'redmine_re', :alt => t(:re_uc_system)), "addStep(jQuery(this).parent().parent().parent(), 'top', 'system')", :class => "" ) %>&nbsp;&nbsp;
	          <%= link_to_function( image_tag('icons/user_go.png', :plugin => 'redmine_re', :alt => t(:re_uc_user))+image_tag('icons/monitor_go_back.png', :plugin => 'redmine_re', :alt => t(:re_uc_system)), "addDialog('steps', 'top')", :class => "" ) %>
	        </th>
	      </tr>
	    </thead>
	    <tbody id="steps">
		  <%= artifact_form.fields_for :re_use_case_steps do |builder| %>
		  	<%= render('re_use_case/re_use_case_step_fields', :f => builder) %>
		  <% end %>
		  
	    </tbody>
	  </table>
	</fieldset>
	
	<%= javascript_tag do %>
	  
		
		function jsInitScript() {
		    jQuery(".steps tbody").sortable({
		      placeholder: 'ui-state-highlight',
		      start: function(event, ui){
		         jQuery(".ui-state-highlight").html("<td colspan='6' style='background:#4466AA'></td>");
		      },
		      update: function(event, ui){
		         updateStepPositionFields();
		      },  
		    });
		}
		jsInitScript();
		updateStepPositionFields();
	  
	  function addDialog(element, add_pos) {
	    addStep(element, add_pos, 'system');
	    sleep(1);
	    addStep(element, add_pos, 'user');
	  }
	
	  function addStep(element, add_pos, type) {
	  	
	  	var now = new Date;
	  	
		var utc_timestamp = Date.UTC(now.getFullYear(),now.getMonth(), now.getDate() , 
					now.getHours(), now.getMinutes(), now.getSeconds(), 
					now.getMilliseconds());
					
	    var rendered_step;
	
	    switch(type) {
	      case 'user':
	      	rendered_step = "<%= get_escaped_setp_html(artifact_form, 1) %>";
	      break;
	      case 'system':
	      	rendered_step = "<%= get_escaped_setp_html(artifact_form, 2) %>";
	    }
	
	    switch(add_pos) {
	      case 'after':  
	        jQuery(element).after( replaceAll(rendered_step, "new_re_use_case_step", utc_timestamp.toString().substring(5,12) )); 
	      break;
	      case 'before': 
	         jQuery(element).before( replaceAll(rendered_step, "new_re_use_case_step", utc_timestamp.toString().substring(5,12) )); 
	      break;
	      case 'bottom': 
	         jQuery('#steps').append( replaceAll(rendered_step, "new_re_use_case_step", utc_timestamp.toString().substring(5,12) )); 
	      break;
	      case 'top':    
	         jQuery('#steps').prepend( replaceAll(rendered_step, "new_re_use_case_step", utc_timestamp.toString().substring(5,12) )); 
	      break;
	      default: alert('<%= t(:re_st_position_not_allowed) %> ' + add_pos);
	    }
	    updateStepPositionFields();
	  }
	
	  function addExpansion(element, use_case_step_id, rendered_expansion) {
	    jQuery(element).append( rendered_expansion );
	  }
	  
	  function addExpansion_new(element, rendered_expansion) {
	    jQuery(element).prev().children().next().append( rendered_expansion );
	  }
	  
	  function add_fields(where, type, content ) {
	  	var now = new Date;
		var utc_timestamp = Date.UTC(now.getFullYear(),now.getMonth(), now.getDate() , 
      						now.getHours(), now.getMinutes(), now.getSeconds(), 
      						now.getMilliseconds());
      	var ts = Math.round((new Date()).getTime() / 1000);
	  	 switch(type) {
	  	    case 're_use_case_step_expansion':
	  	    case 're_use_case_step_expansions':
	  	    	content = replaceAll(content, "new_re_use_case_step_expansions", utc_timestamp.toString().substring(5,12));
	  	    	addExpansion_new(where, content);
	  	    break;
	  	 }
	  }
	  
	  function replaceAll(txt, replace, with_this) {
	  	return txt.replace(new RegExp(replace, 'g'),with_this);
	  }
	
	  function updateStepPositionFields() {
	    var pos = 1;
	    jQuery('#steps').children().each( function(child) {
	      jQuery(this).attr('id','use_case_step_expansion_drag_' + pos);
	      jQuery(this).children().children('.position').attr('value', pos);
	      pos++;
	    });
	  }
	
	  function remove_fields(link) {
  		jQuery(link).prev("input[type=hidden]").val("1");
  		jQuery(link).closest(".nested_field").hide();
	  }
	  
	  function updateStepExpansionPositionFields() {
	    /** Not implemented **/
	  }
	
	<% end %>
<% end %>
