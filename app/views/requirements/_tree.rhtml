<div id="tree"></div>

<script type="text/javascript">

    // We declare the tree outside of the function. This way it's
    // accessible from any function
    var tree = null;
    var treeData = <%= @jsontree.to_s %>;

    // Tree initialisation.
    var initTree = function TafelTreeInit() {
        tree = new TafelTree('tree', treeData, {
            'generate' : true,
            'imgBase' : '<%=image_path('tafeltree', :plugin => 'redmine_re').split('?')[0] %>/',
            'width' : '100%', // default value : 100%
            'height' : 'auto', // default value : auto
            'openAtLoad' : true,
            'cookies' : false,
            'onDrop' : tree_node_drop
        });
    }

    // This function is called automatically
    // when the page finishes to load
    // (and can be called manually on success of an ajax call
    initTree();

    function tree_node_click (branch) {
        var id = branch.getId();
        var controller = branch.getIcon();
        controller = controller.substr(0, controller.length - '.gif'.length);
        var url = '/' + controller + '/edit/'+ id + '?project_id=<%= @project.id -%>'; 

        //Usage of prototype Ajax request builder
        new Ajax.Updater('detail_view', url, {asynchronous:true, evalScripts:true, method:'get'});
        // Thorsten, den Helper kann ich nicht einsetzten, weil er nicht dynamisch ist -->
        // die URL ergibt sich ja erst aus dem OnClick, und darauf kann ich aus dem Ruby-
        // code ja zum Zeitpunkt der Auswertung noch nicht zugreifen...
        <%#= remote_function(:update => "detail_view", :url => { :action => url }) %>
        return false;
    };


    function tree_node_drop (branch_move, branch_here, drop_finished, new_branch) {
        // Beware, the function is called twice. One time before drop
        // happends, one time after. Here, we check before drop
        // happends
        if (!drop_finished) {
            // Tests
            if (true) {
                // OK, the branch will be dropped here
                return true;
            } else {
                // Here, the branch won't be dropped and will return
                // at her place
                return false;
            }
        } else {

            var url = '/requirements/delegate_tree_drop?new_parent_id=' + branch_here.getId() + ';moved_artifact_id=' + branch_move.getId();
            // Usage of prototype Ajax request builder
            new Ajax.Request(url, {method: 'get'})

        }
        return false; /*to present on_click from invoking */
    }

</script>