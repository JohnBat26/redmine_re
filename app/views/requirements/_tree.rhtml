<% content_for :header_tags do %>
    <%= stylesheet_link_tag 'sortable_tree.css', :plugin => "redmine_re", :media => 'all' %>
    <%= stylesheet_link_tag 'context_menu.css', :media => 'all' %>
    <%= javascript_include_tag 'sortable_tree.js', :plugin => 'redmine_re' %>
<% end%>
<h3><%= l(:re_tree_overview) %></h3>

<%= @htmltree %>

<div id="log"></div>

<script type="text/javascript">
  //<![CDATA[
    
  var tree = new SortableTree('tree', {
    droppable: {
      container: ':not(.we_are_all_containers)' /* everything specified here is able to be a container for a drop */
    },
    onDrop: function(drag, drop, event){
      var left_node_id = drag.leftNode ? drag.leftNode.id() : ''
      var url = '/requirements/delegate_tree_drop?new_parent_id=' + drag.parent.id() + ';moved_artifact_id=' + drag.id() + ';left_artifact_id=' + left_node_id;
      new Ajax.Request(url, {method: 'get'})      
      
      $('log').update($('log').innerHTML + "<p>" + drag.to_params() + "</p>")
    }
  });
  tree.setSortable();

  Event.observe(document.body, 'click', hide_context_menu.bindAsEventListener());

  function hide_context_menu (e){
      var target = Event.element(e);
      if (!target.hasClassName('tafelTreecontent'))  {
          // Element is definitively outside of the tree as tree nodes are in td-tags
          Effect.Fade('context-menu', {duration: 0.10});
      }
  };


  function tree_node_double_click (branch) {
      var id = branch.getId();
      var url = '/re_artifact_properties/edit/'+ id + '?project_id=<%= @project.id -%>';

      //Usage of prototype Ajax request builder
      new Ajax.Updater('detail_view', url, {asynchronous:true, evalScripts:true, method:'get'});
      return false;
  };

  Event.observe(window, "load", function(){
    $$('.nodelink').each(function(element){
      Event.observe(element, 'click', render_node_context_menu);
    });
  });


  function render_node_context_menu(event) {
      var element = event.element();
      var id = element.ancestors().first().id;
      id = id.gsub('node_','');
      var url = '/requirements/context_menu/' + id + '?project_id=<%= @project.id -%>';
      var mouse_x = Event.pointerX(event);
      var mouse_y = Event.pointerY(event);
      var render_x = mouse_x;
      var render_y = mouse_y;
      var dims;
      var menu_width;
      var menu_height;
      var window_width;
      var window_height;
      var max_width;
      var max_height;
      new Ajax.Updater('context-menu', url, {asynchronous:true, evalScripts:true, method:'get'});
      menu = document.getElementById('context-menu');
      dims = menu.getDimensions();
      menu_width = dims.width;
      menu_height = dims.height;
      max_width = mouse_x + 2 * menu_width;
      max_height = mouse_y + menu_height;

      window_width = document.viewport.getWidth();
      window_height = document.viewport.getHeight();

      /* display the menu above and/or to the left of the click if needed */
      if (max_width > window_width) {
          render_x -= menu_width;
          $('context-menu').addClassName('reverse-x');
      } else {
          $('context-menu').removeClassName('reverse-x');
      }
      if (max_height > window_height) {
          render_y -= menu_height;
          $('context-menu').addClassName('reverse-y');
      } else {
          $('context-menu').removeClassName('reverse-y');
      }
      if (render_x <= 0) render_x = 1;
      if (render_y <= 0) render_y = 1;
      $('context-menu').style['left'] = (render_x + 'px');
      $('context-menu').style['top'] = (render_y + 'px');
      //$('context-menu').style['left'] = ('400px');
      //$('context-menu').style['top'] = ('400px');
      Element.update('context-menu', '');

      Effect.Appear('context-menu', {duration: 0.20});
      if (window.parseStylesheets) {
          window.parseStylesheets();
      } // IE
  };
  //]]>
</script>