<div id="tree"></div>

<script type="text/javascript">

    // We declare the tree outside of the function. This way it's
    // accessible from any function
    var tree = null;
    var treeData = <%= @jsontree.to_s %>;

    // Tree initialisation.
    var initTree = function TafelTreeInit() {
        tree = new TafelTree('tree', treeData, {
            'generate' : true,
            'imgBase' : '<%=image_path('tafeltree', :plugin => 'redmine_re').split('?')[0] %>/',
            'width' : '100%', // default value : 100%
            'height' : 'auto', // default value : auto
            'openAtLoad' : true,
            'cookies' : false,
            'onDrop' : tree_node_drop
        });
    }

    // This function is called automatically
    // when the page finishes to load
    // (and can be called manually on success of an ajax call
    initTree();

    function tree_node_click (html, event, whatsoever) {
        alert('html: ' + html + ' event ' + event + ' no more arguments given by the tree ' + whatsoever);
        /*new Ajax.Updater({}, '/requirements/some/' + id, {asynchronous:true, evalScripts:true, parameters:'authenticity_token=' + encodeURIComponent('4z+QuWrwlcTPoK7i/79IT6+rmtDQUAlIttTvAdFHuEg=')});
        */

        /*
        Daniela:
        Der Baum scheint ja das html der Node auszugeben (s. alert).

        Du könntest versuchen daraus die ID zu filtern, das in den Link für den Ajax.updater zu geben
        im Controller das entsprechende Artefakt zu holen, den Typ auszulesen und daraufhin den Link
        auf den richtigen Controller zu setzen bzw. (viel schwieriger) ein entsprechendes Menü-Partial
        (show, edit, delete...) zu rendern...
         */
        return false;
    };


    function tree_node_drop (branch_move, branch_here, drop_finished, new_branch) {
        // Beware, the function is called twice. One time before drop
        // happends, one time after. Here, we check before drop
        // happends
        if (!drop_finished) {
            // Tests
            if (true) {
                // OK, the branch will be dropped here
                return true;
            } else {
                // Here, the branch won't be dropped and will return
                // at her place
                return false;
            }
        } else {
            /* ich bin mir ziemlich sicher, dass es für XMLHttpRequests auch Rails-Helper bzw. etwas von Prototype gibt ...
             * schau mal den generierten Code dieser Seite im Browser an. Der "ShowTree"-Helper generiert new Ajax.Request(...) */
            var request = new XMLHttpRequest();
            var url = '/requirements/delegate_tree_drop?new_parent_id=' + branch_here.getId() + ';moved_artifact_id=' + branch_move.getId();
            request.open('get', url, true);
            request.send(null)
        }
        return false; /*to present on_click from invoking */
    }

</script>